{
  "name": "Daily Workflow Backups to Git Repo",
  "settings": {
    "callerPolicy": "workflowsFromSameOwner",
    "executionOrder": "v1",
    "errorWorkflow": "TwTEUymppwPwLnZI",
    "timeSavedPerExecution": 2
  },
  "versionId": "6b4f003d-4c85-4f18-b787-a07416f73344",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 23,
              "triggerAtMinute": 55
            }
          ]
        }
      },
      "id": "ecb7924b-23f3-480d-aede-79edaa55be2a",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        480,
        816
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "authentication": "gitPassword",
        "operation": "clone",
        "repositoryPath": "={{ $json.config.localRepoPath }}",
        "sourceRepository": "={{ $json.config.repository }}"
      },
      "type": "n8n-nodes-base.git",
      "typeVersion": 1,
      "position": [
        1280,
        816
      ],
      "id": "ec5c0caf-f635-4b27-9c79-45b046bc3a97",
      "name": "Clone Backup Repo",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c4c4b6fb-5d9d-44a7-bdfd-5cd4e3ebb8aa",
              "name": "config.localRepoPath",
              "value": "=/tmp/workflow-{{ $workflow.id }}-{{ DateTime.now().format(\"yyyyLLddhhmm\") }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {
          "dotNotation": true
        }
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        928,
        816
      ],
      "id": "e133436d-6adb-4e54-a4c5-b125eff94a85",
      "name": "Enrich Config (generated)"
    },
    {
      "parameters": {
        "filters": {},
        "requestOptions": {}
      },
      "id": "0df71abc-0da7-46a4-9174-f3430867d975",
      "name": "Get Workflows1",
      "type": "n8n-nodes-base.n8n",
      "position": [
        1632,
        1040
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "operation": "toJson",
        "mode": "each",
        "options": {
          "format": true,
          "encoding": "utf8",
          "fileName": "={{ (()=>{\n\nconst slugify = (text) => {\n  return text.toString().toLowerCase()\n    .replace(/\\s+/g, '-')           // Replace spaces with -\n    .replace(/[^\\w\\-]+/g, '')       // Remove all non-word chars\n    .replace(/\\-\\-+/g, '-')         // Replace multiple - with single -\n    .replace(/^-+/, '')             // Trim - from start of text\n    .replace(/-+$/, '');            // Trim - from end of text\n}\n\nconst fileName = `${$json.name}_${$json.id}`\n\nreturn `${slugify(fileName)}.json`\n})() }}"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        1808,
        1040
      ],
      "id": "74ce5f1b-5838-4da1-8b34-6787221fdba5",
      "name": "Convert to File"
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "={{ $('(Re-)Create backup folder').item.json.backupFolderPath }}/{{ $binary.data.fileName }}",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        1984,
        1040
      ],
      "id": "d56538b0-3719-43b1-80f9-6b966bcd8605",
      "name": "Read/Write Files from Disk"
    },
    {
      "parameters": {
        "operation": "addConfig",
        "repositoryPath": "={{ $('Enrich Config (generated)').item.json.config.localRepoPath }}",
        "key": "user.name",
        "value": "={{ $('Enrich Config (generated)').item.json.config.git.name }}",
        "options": {
          "mode": "set"
        }
      },
      "type": "n8n-nodes-base.git",
      "typeVersion": 1,
      "position": [
        1456,
        816
      ],
      "id": "7851f98b-a68a-4ddf-a69c-05c0d6c0c78a",
      "name": "Git - User Name"
    },
    {
      "parameters": {
        "operation": "commit",
        "repositoryPath": "={{ $('Continue - Commit').item.json.config.localRepoPath }}",
        "message": "=Backup {{ DateTime.now().toISO() }}",
        "options": {}
      },
      "type": "n8n-nodes-base.git",
      "typeVersion": 1,
      "position": [
        1632,
        1264
      ],
      "id": "6646e4b6-718d-4f51-92e2-437b689ffb30",
      "name": "Git - Commit"
    },
    {
      "parameters": {
        "authentication": "gitPassword",
        "operation": "push",
        "repositoryPath": "={{ $('Continue - Commit').item.json.config.localRepoPath }}",
        "options": {}
      },
      "type": "n8n-nodes-base.git",
      "typeVersion": 1,
      "position": [
        1808,
        1264
      ],
      "id": "427eaef5-debd-485c-ac9f-fd779b47d55c",
      "name": "Git - Push"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const fs = require('fs')\n\nconst localRepoPath = $json.config.localRepoPath\nfs.rmSync(localRepoPath, { recursive: true, force: true });\nconsole.log(`Deleted folder: ${localRepoPath}`);\n\nreturn { success: true }"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1456,
        1504
      ],
      "id": "eb9803ec-76aa-48e9-9fdd-23d679fa2ba3",
      "name": "Clean up"
    },
    {
      "parameters": {
        "mode": "chooseBranch",
        "useDataOfInput": 2
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        1280,
        1040
      ],
      "id": "145b0994-9868-44a1-9724-858986b42e85",
      "name": "Continue - Backup Workflows"
    },
    {
      "parameters": {
        "operation": "addConfig",
        "repositoryPath": "={{ $('Enrich Config (generated)').item.json.config.localRepoPath }}",
        "key": "user.email",
        "value": "={{ $('Enrich Config (generated)').item.json.config.git.email }}",
        "options": {}
      },
      "type": "n8n-nodes-base.git",
      "typeVersion": 1,
      "position": [
        1632,
        816
      ],
      "id": "730980f2-ce5c-4b8f-b41c-2dc0833ff5fa",
      "name": "Git - User Email"
    },
    {
      "parameters": {
        "operation": "add",
        "repositoryPath": "={{ $json.config.localRepoPath }}",
        "pathsToAdd": "={{ $json.config.subPath }}"
      },
      "type": "n8n-nodes-base.git",
      "typeVersion": 1,
      "position": [
        1456,
        1264
      ],
      "id": "13b076d5-d8b6-4711-a055-3b646d481f44",
      "name": "Git"
    },
    {
      "parameters": {
        "mode": "chooseBranch",
        "useDataOfInput": 2
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        1280,
        1264
      ],
      "id": "efbf8a4e-bfa7-41d5-bd44-fe9dba611e7c",
      "name": "Continue - Commit"
    },
    {
      "parameters": {
        "mode": "chooseBranch",
        "useDataOfInput": 2
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        1280,
        1504
      ],
      "id": "942a58a0-9886-4247-987b-88053c65c4e2",
      "name": "Continue - Clean up"
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "fileName"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        2160,
        1040
      ],
      "id": "359249ca-a9d0-4aff-ad16-e595013461bf",
      "name": "Aggregate"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "314eda1c-cc62-4430-8eeb-1aa5f0f3e8c0",
              "name": "config.repository",
              "value": "https://github.com/your-username/n8n-workflows-backup.git",
              "type": "string"
            },
            {
              "id": "45db00c4-a336-4c3b-bfbf-af59892a33e7",
              "name": "config.subPath",
              "value": "n8n-workflows",
              "type": "string"
            },
            {
              "id": "e0c3c8ba-f77b-47cb-8925-f25ac19389bd",
              "name": "config.deleteOldWorkflows",
              "value": true,
              "type": "boolean"
            },
            {
              "id": "0af092ec-05a6-436e-b3b0-0a3aa060e633",
              "name": "config.git.name",
              "value": "n8n Workflow Backup",
              "type": "string"
            },
            {
              "id": "836f121f-98aa-4313-99ce-e94a1e35f5dd",
              "name": "config.git.email",
              "value": "n8n-workflow-backup@mekanics.ch",
              "type": "string"
            },
            {
              "id": "72bc3187-bdab-4091-ae5a-c4938a6533a1",
              "name": "job",
              "value": "={{ $json }}",
              "type": "object"
            }
          ]
        },
        "options": {
          "dotNotation": true
        }
      },
      "id": "2ab11b64-2b55-4837-8ce0-07fc2291a82a",
      "name": "Config",
      "type": "n8n-nodes-base.set",
      "position": [
        704,
        816
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const fs = require('fs');\nconst path = require('path');\n\nconst folderName = $json.config.subPath ?? 'n8n-workflows';\nconst folderPath = path.join($json.config.localRepoPath, folderName);\n\nif ($json.config.deleteOldWorkflows && fs.existsSync(folderPath)) { \n  fs.rmSync(folderPath, { recursive: true, force: true });\n  console.log(`Deleted folder: ${folderPath}`);\n}\n\nif (!fs.existsSync(folderPath)) {\n  fs.mkdirSync(folderPath, { recursive: true });\n  console.log(`Created folder: ${folderPath}`);\n} else {\n  console.log(`Folder already exists: ${folderPath}`);\n}\n\nreturn { \n  ...$json,\n  backupFolderPath: folderPath \n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1456,
        1040
      ],
      "id": "323a801a-be1e-4dfb-bbb8-77adf30609f7",
      "name": "(Re-)Create backup folder"
    },
    {
      "parameters": {
        "content": "## 🧠 Daily Workflow Backups to Git Repo\n\nThis n8n workflow automatically backs up all your existing workflows to a Git repository on a scheduled basis.\nIt ensures version control, safe storage, and easy rollback of your n8n configurations.\n\n### ⚠️ Requirements\n\nThis workflow requires the `fs` (filesystem) module to be enabled in n8n. Set the following environment variable:\n\n```bash\nexport NODE_FUNCTION_ALLOW_BUILTIN=fs\n```\n\nFor more information, see: https://docs.n8n.io/hosting/configuration/configuration-examples/modules-in-code-node/\n\n### ⚙️ How It Works\n1. Trigger\n   - Runs on a schedule (daily or as configured in the Schedule Trigger node).\n2. Configuration\n   - Defines key backup parameters:\n      - Git repository URL\n      - Local temporary path (/tmp/...)\n      - Subfolder name\n      - Option to delete old workflows before backup\n3. Git Setup\n   - Clones the remote repository\n   - Sets Git username and email for commits\n   - Prepares the local folder for storing exported workflows\n4. Backup Process\n   - Fetches all n8n workflows via API\n   - Converts each workflow into a formatted JSON file\n   - Writes the files to the designated backup folder\n5. Commit & Push\n   - Adds all workflow files to Git\n   - Commits changes with a timestamped message\n   - Pushes the updates to the remote repository\n6. Cleanup\n   - Removes the temporary local repository folder after a successful push\n\n### 🔗 Links\n- GitHub folder for backups:  [mekanics/n8n-workflows-backup](https://github.com/mekanics/n8n-workflows-backup)\n\n### 📇 Contact\n- [Github](https://github.com/mekanics)\n- [LinkedIn](https://www.linkedin.com/in/jolyalexandre/)\n",
        "height": 1128,
        "width": 656
      },
      "id": "3803f1ca-9296-46ce-8e35-01d8c5f9812c",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -224,
        720
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "### Configure Git",
        "height": 220,
        "width": 1180,
        "color": 2
      },
      "id": "9b6a61ed-b2b7-432f-9d36-1715ef1a6f02",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1184,
        768
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "### Backup the workflows",
        "height": 220,
        "width": 1180,
        "color": 3
      },
      "id": "857a42e9-bb6a-4a2f-acc0-84b7b2d35cdb",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1184,
        992
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "### Commit & Push",
        "height": 220,
        "width": 1180,
        "color": 4
      },
      "id": "0a7f8ba1-ea6e-448b-8724-b12c92296a91",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1184,
        1216
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "### Clean up the local folder",
        "height": 220,
        "width": 1180,
        "color": 5
      },
      "id": "9c386972-e048-4b38-81b8-50086edf357d",
      "name": "Sticky Note7",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1184,
        1440
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "### Configure the workflow here",
        "height": 284,
        "width": 172,
        "color": 2
      },
      "id": "03d45348-f449-4e51-a97a-26b2476db9b9",
      "name": "Sticky Note8",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        672,
        720
      ],
      "typeVersion": 1
    }
  ],
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Config",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clone Backup Repo": {
      "main": [
        [
          {
            "node": "Git - User Name",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enrich Config (generated)": {
      "main": [
        [
          {
            "node": "Continue - Backup Workflows",
            "type": "main",
            "index": 1
          },
          {
            "node": "Clone Backup Repo",
            "type": "main",
            "index": 0
          },
          {
            "node": "Continue - Clean up",
            "type": "main",
            "index": 1
          },
          {
            "node": "Continue - Commit",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Get Workflows1": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Git - User Name": {
      "main": [
        [
          {
            "node": "Git - User Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Git - Commit": {
      "main": [
        [
          {
            "node": "Git - Push",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Git - Push": {
      "main": [
        [
          {
            "node": "Continue - Clean up",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Continue - Backup Workflows": {
      "main": [
        [
          {
            "node": "(Re-)Create backup folder",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Git - User Email": {
      "main": [
        [
          {
            "node": "Continue - Backup Workflows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Git": {
      "main": [
        [
          {
            "node": "Git - Commit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Continue - Commit": {
      "main": [
        [
          {
            "node": "Git",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Continue - Clean up": {
      "main": [
        [
          {
            "node": "Clean up",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Continue - Commit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Config": {
      "main": [
        [
          {
            "node": "Enrich Config (generated)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "(Re-)Create backup folder": {
      "main": [
        [
          {
            "node": "Get Workflows1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  }
}